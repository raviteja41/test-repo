CREATE TABLE ynap.df_tran_shipment_receipt (
    receipt_header_key text PRIMARY KEY,
    receipt map<text, text>,
    receipt_lines map<text, frozen<ynapnestedmap>>,
    receipt_no text,
    shipment_key text
);
CREATE TABLE ynap.df_tran_order_invoice_info (
    order_invoice_key text PRIMARY KEY,
    invoices set<text>,
    order_header_key text,
    order_invoice map<text, text>,
    order_invoice_detail map<text, frozen<ynapnestedmap>>
);
CREATE TABLE ynap.df_tran_shipment_tag_serial (
    shipment_line_key text PRIMARY KEY,
    shipment_tag_serial map<text, frozen<ynapnestedmap>>
);
CREATE TABLE ynap.df_tran_availability_inv_info (
    inventory_item_key text PRIMARY KEY,
    inventory_alerts map<text, frozen<ynapnestedmap>>,
    organization_code text
);
CREATE TABLE ynap.df_tran_order_info (
    order_header_key text PRIMARY KEY,
    extended_price map<text, double>,
    item_ids set<text>,
    line_over_all_totals map<text, frozen<ynapnestedmap>>,
    line_price_info map<text, frozen<ynapnestedmap>>,
    line_total_without_tax map<text, decimal>,
    line_totals map<text, double>,
    order_dates map<text, frozen<ynapnestedmap>>,
    order_line map<text, frozen<ynapnestedmap>>,
    order_line_schedule map<text, frozen<ynapnestedmap>>,
    order_release map<text, frozen<ynapnestedmap>>,
    order_status map<text, frozen<ynapnestedmap>>,
    ordered_qty map<text, decimal>,
    other_charges_line map<text, double>,
    pricing_qty map<text, decimal>,
    sales_order_header_key text
);
CREATE TABLE ynap.df_tran_audit_order_info (
    order_audit_key text PRIMARY KEY,
    order_audit map<text, text>,
    order_audit_level map<text, frozen<ynapnestedmap>>
);
CREATE TABLE ynap.df_tran_order_hold_type (
    order_hold_type_key text PRIMARY KEY,
    order_header_key text,
    order_hold_type map<text, text>,
    order_hold_type_log map<text, frozen<ynapnestedmap>>
);
CREATE TABLE ynap.df_tran_shipment_info (
    shipment_key text PRIMARY KEY,
    container_details map<text, frozen<ynapnestedmap>>,
    container_nos set<text>,
    containers map<text, frozen<ynapnestedmap>>,
    item_ids set<text>,
    order_header_key text,
    shipment map<text, text>,
    shipment_line map<text, frozen<ynapnestedmap>>,
    shipment_no text,
    tracking_nos set<text>,
    type text
);
CREATE TABLE ynap.df_tran_finance_info (
    order_header_key text PRIMARY KEY,
    awards map<text, frozen<ynapnestedmap>>,
    book_amounts map<text, double>,
    charge map<text, double>,
    charge_transaction_details map<text, frozen<ynapnestedmap>>,
    header_charges map<text, frozen<ynapnestedmap>>,
    header_taxes map<text, frozen<ynapnestedmap>>,
    invoiced_charge map<text, double>,
    invoiced_tax map<text, text>,
    l_charge map<text, double>,
    line_charges map<text, frozen<ynapnestedmap>>,
    payment_methods map<text, frozen<ynapnestedmap>>,
    promotions map<text, frozen<ynapnestedmap>>,
    tax map<text, double>,
    type text
);
CREATE TABLE ynap.df_tran_misc_info (
    driver_key text PRIMARY KEY,
    chat_transcript map<text, frozen<ynapnestedmap>>,
    customer_id text,
    inst_detail_key set<text>,
    instructions map<text, frozen<ynapnestedmap>>,
    order_header_key text,
    references map<text, frozen<ynapnestedmap>>,
    type text
);
CREATE TABLE ynap.df_connector_trandata_info (
    driverkey text,
    module text,
    source text,
    insert_time timestamp,
    is_processed boolean,
    last_modified_time timestamp,
    PRIMARY KEY (driverkey, module, source)
);
CREATE TABLE ynap.df_tran_order_header (
    order_header_key text PRIMARY KEY,
    bill_to_id text,
    bill_to_key text,
    buyer_organization_code text,
    buyer_user_id text,
    grand_total decimal,
    hdr_tax decimal,
    hdr_total decimal,
    order_date text,
    order_header map<text, text>,
    order_no text,
    other_charges_order_header double,
    price_info_currency text,
    price_info_total_amount text,
    ship_to_key text,
    type text
);
CREATE TABLE ynap.df_tran_credit_card_transaction (
    charge_transaction_key text PRIMARY KEY,
    credit_card_transaction map<text, frozen<ynapnestedmap>>
);
